using System;
using System.Collections.Generic;

public class Program
{
    public static void Main()
    {
        List<int> inputList = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        int n = 3; // Eliminar cada 3er elemento
        List<int> result = Drop(inputList, n);
        
        Console.WriteLine(string.Join(", ", result));
    }

    public static List<int> Drop(List<int> list, int n)
    {
        List<int> result = new List<int>();
        DropHelper(list, n, n, result);
        return result;
    }

    private static void DropHelper(List<int> list, int k, int n, List<int> result)
    {
        if (list.Count == 0)
            return;

        if (k == 1)
        {
            // Omite el primer elemento y reinicia el contador
            DropHelper(list.

% Elimina cada n-ésimo elemento de una lista.
% Utiliza un contador para determinar cuándo eliminar un elemento.
drop(L, N, R) :- drop(L, N, N, R).

% Caso base: cuando la lista está vacía, el resultado es vacío.
drop([], _, _, []).
% Si el contador llega a 1, omite el primer elemento y reinicia el contador.
drop([_|T], 1, N, R) :- drop(T, N, N, R).
% Caso recursivo: disminuye el contador y conserva el elemento.
drop([H|T], K, N, [H|R]) :- K > 1, K1 is K - 1, drop(T, K1, N, R).
