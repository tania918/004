using System;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    public static void Main()
    {
        List<List<int>> inputList = new List<List<int>>
        {
            new List<int> { 1, 2 },
            new List<int> { 3, 4, 5 },
            new List<int> { 6 },
            new List<int> { 7, 8, 9, 10 }
        };

        List<List<int>> sortedList = LengthSort(inputList);

        foreach (var sublist in sortedList)
        {
            Console.WriteLine($"[{string.Join(", ", sublist)}]");
        }
    }

    public static List<List<T>> LengthSort<T>(List<List<T>> list)
    {
        // Crea una lista de pares (longitud, sublista)
        var pairs = list.Select(sublist => new { Length = sublist.Count, Sublist = sublist }).ToList();

        // Ordena los pares por longitud
        var sortedPairs = pairs.OrderBy(pair => pair.Length).ToList();

        // Extrae solo las sublistas ordenadas
        var sortedSublists = sortedPairs.Select(pair => pair.Sublist).ToList();

        return sortedSublists;
    }
}



% Ordena una lista de listas de acuerdo con la longitud de las sublistas.
lsort(L, S) :- map_list_to_pairs(length, L, P), keysort(P, SP), pairs_values(SP, S).
